type token =
    TRUE
  | SEMICOLON
  | RPAREN
  | RBRACE
  | PLUS
  | MUL
  | MIN
  | LT
  | LPAREN
  | LET
  | LBRACE
  | Ident of string
  | INT of int
  | IF
  | GT
  | FALSE
  | EQ
  | EOF
  | ELSE
  | DIV
  | COMMA
  | ASSIGN
val menhir_begin_marker : int
val xv_statement : Ast.statement
val xv_separated_nonempty_list_COMMA_expr_ : Ast.expr list
val xv_separated_nonempty_list_COMMA_Ident_ : string list
val xv_separated_list_COMMA_expr_ : Ast.expr list
val xv_separated_list_COMMA_Ident_ : string list
val xv_prog : Ast.statement list
val xv_loption_separated_nonempty_list_COMMA_expr__ : Ast.expr list
val xv_loption_separated_nonempty_list_COMMA_Ident__ : string list
val xv_list_statement_ : Ast.statement list
val xv_list_else_if_ : Ast.expr list
val xv_expr : Ast.expr
val xv_else_if : Ast.expr
val xv_app : Ast.expr
val menhir_end_marker : int
